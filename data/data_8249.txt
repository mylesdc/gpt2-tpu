Here we present the basic concepts behind the vsfold5 approach. In Section S2.1, we briefly review what algorithms have been (or are being) used to address the pseudoknot problem (for reference).
Techniques for solving pseudoknots fall into roughly six widely overlapping categories.
Loop matching strategies by and large are the oldest and currently are still utilized with other techniques. Early methods employed free energy to weight the loops [2, 3] and Monte Carlo techniques [2] to find the best pseudoknot. A recent developed approach (PLMM_DPSS) employs free energy weight of loop fragments and special features of pseudoknots to discriminate likely structures and reports computation times (known as time complexity) of order and 2 log CN N 2 N in memory, where N is the number of nucleotides in the sequence and is a constant [4] .
Similarly, HotKnots is a heuristic approach that builds up candidate structures by adding fragments of secondary structure one at a time (from secondary structure calculations) and allows multiple partially formed structures [5] .
Vsfold5 uses pointers to map the secondary structure, and handles and a lookup table of exit tags to link different segments of secondary structure together to form different parts of the pseudoknot.
There are other formal mapping methods [23] , but for the problems that are addressed here, the approach explained in this work appears to be more applicable.
Here we define the indices and i j represent residues (base i and base j ) in the RNA sequence with and the indexing runs successively from the 5' end to the 3' end of the sequence. A base pair (bp) that is formed between base and base i j < i j is indicated by the ordered In this approach, the pointer maps the next major position of the secondary structure and any previous position that is present in the structure. The pointer consists of the current position , a tag classifying the type of secondary structure located at , a forward link (labeled "forward" in For example, Fig. S7a shows a stem with a pointer located at a base pair . The tag at is 'S', the forward pointer (green arrow labeled "forward") aims at the head of the stem and the reverse pointer (brown arrow labeled "reverse") aims at the tail of the stem . When the pointer is located at in the stem (same Figure) , it points to the next secondary structure and back to the tail of itself at . In Figure S7 , the next secondary structure is a hairpin (tag 'H') and the pointer points forward to itself at . Figure S7b shows a triangle diagram representation of the secondary structure and the respective coordinates for a stem terminated by a loop (known as a "stem-loop"). In Figure S8a , is located at the head of stem , indicated also by the green oval.
The secondary structure is an internal loop (tag 'I') and the forward pointer aims at the tail of the next stem located at ; this is also shown in Fig. S8b as a triangle diagram. Like the hairpin loop, the reverse pointer indicates the tail at . (The subscript index is used for notation purposes here. The pointers at each position are sufficient to fully index all necessary information.) In Figure S9a , the pointer is at a multibranch loop (tag 'M') at (green oval). Here, a single pointer is insufficient to indicate the branching of the stem and an array of pointers is applied at to map out the branches at and :
, ( t t q p forward 1 and forward 2 respectively. The reverse pointer aims at whose tag is 'S'.
The pointers are also shown in Fig. S9b with a labels "(f1)" and "(f2)" indicating the forward pointers (green arrows), and "(r)" indicating the reverse pointer (brown arrow). 00 ) , ( t t q p (p t ,q t ) 00 (p h ,q h ) 00 (p t ,q t ) 11 (p h ,q h ) 11 (p t ,q t ) 12 (p h ,q h ) 12 (p t ,q t ) 00 (p t ,q t ) 00 (p t ,q t ) 11 (p h ,q h ) 11 (p t ,q t ) 12 (p h ,q h ) 12 and forward "f1" and "f2" pointers (green arrows) and a reverse pointer "r" (brown arrow). This information is regularly updated with each construction of the map or section of the map.
A summary of the secondary structure pointers is shown in Tab. S1. For RNA secondary structure, this information is sufficient to map a complete structure and assess the relationship of a
given secondary structure at to other secondary structure in other regions of the map. The ) , ( j i modeling provides more immediate structure information than traditional methods. Currently, most of the secondary structural considerations in vsfold5 are limited to the local region in the vicinity of where the main focus is on the persistence length and stem formation. However, with pseudoknots (next section), global search methods were required because the configuration information about other parts of the structure aid in deciding the stability of any potential structure.
Modules are easily added to expand this functionality further. Table S1 . List of pointers used in the secondary structure maps:
(ss_name) a tag indicating the secondary structure, (ss_link) the forward link, 
The pseudoknot (PK) adds considerable complexity to the simple pointer type mapping used in secondary structure calculations. To address this, handles are used to map out the pseudoknot superstructure, while the intervening secondary structure is handled in the same way as before. With the exception of true knots, if some folding pathway can be described by decomposing the structure into a set of sub-structural modules, all typical types of pseudoknot structures can be described by this approach.
First we distinguish between two types of pseudoknots: core PKs and extended PKs.
A core PK consists of a domain (or a group of domains) of secondary structure that are joined by a linkage strand. Its primitive structure resembles an H-type PK [7] or in other terminology, an ABAB PK [24] . This is expressed by the outlined structure (Fig. S10a , the outline colored blue, orange and red and extending from the labels and ). The gray structures indicate additional R i R j secondary structure that could embellish this core PK and are mapped onto the core PK structure by the handles. A triangle diagram of the same structure is shown in Fig. S10b .
Junction region
Root stem region Figure S10 : Example of a core pseudoknot: (a) the pseudoknot structure and labels, (b) the corresponding structure on the triangle diagram. The gray stems extending from the main structure indicate some of the multitude of possible embellishments that could be added to the basic structure.
The core PK handle contains an input index ( ) and output index ( ) forming a complete independent module. To , other secondary structure (ss) pointers or PK handles can be mapped onto this handle. This permits PKs that are embedded (or nested) into other ss and PKs. The root domain can consist of a complex domain of secondary structure, a simple stem, or another pseudoknot. The junction region and the neck of the root stem can also associate complex ss, PKs, or a simple loop. Hence, considerable complexity can be systematically mapped onto the PK.
In short, the handles map out global configuration in a similar way as the pointers map out local secondary structure, but they handle considerably more complex and detailed information than do the simpler ss pointers. Table S2 shows a description of the handles used for cPKs, where the handles used by cPKs are indicated in the upper section of the Table. j i b a j j j d2 d2
Root stem region 1
Root stem region 2
Linkage Stem neck region 2 neck region 1 Supplement Figure S11 : Example of an extended pseudoknot: (a) the pseudoknot structure and labels, (b) the corresponding structure on the triangle diagram. As in 
Some types of PKs cannot be mapped using the cPK architecture. These types of structures have the characteristic that they join two independently stable domains of structure (often secondary structure) together by a small linkage stem (Fig. S11a) . These are called extended pseudoknots (ePK) because they extend over at least two independently stable domains of complex RNA structure. The essential structure of an ePK is shown in Fig. S11a along with the corresponding half triangle diagram (Fig. S11b) . The primitive form of an extended PK resembles the ABACBC type structures [24] . The pointers used for an ePK are summarized in Tab. S2. Table   S1 . The tag 'K' indicates a core pseudoknot, 'R' an extended pseudoknot, and 'J' a junction (effectively identical to a hairpin loop 'H'). Core PKs ignore terms in the last part of the Table. MBLs are specified by the handles Jbranch (for junction), p1branch (root domain 1 at ijp1) and p2branch (root domain 2 at ijp2).
The Free energy for the junction (dGJ) is evaluated at the closing point of the loop ( , ) l l p q and the correction to the free energy due to the presence of a pseudoknot is stored in dGwt (i.e., pql) as a weight. The set is certainly complete and even to some extent redundant in some cases.
Similar to the cPK, the ePK has an input ( ) and output ( ). However, instead of one root domain, there are two: domain 1 (blue background region) and 2 (purple background region). The linkage stem joins these two independent domains at the respective neck regions: (neck region 1) and (neck region 2). Special pointers in the handles map any structure in the loop (ss or PK). Similarly, the junction region also contains special handles to map out any complex structure contained in . Like the root domain of the cPK, the root domains of the ePK can consist of complex ss or even PKs. Hence, very complex structure can be mapped if some hierarchical folding pattern for a sequential 5' to 3' folding can be discerned.
More will be discussed in Section S2.3.2 on the diversity of PK structures that can be obtained.
We only comment here that unlike other formal description schemes [23] , the core and extended PK notation depends strongly on the way in which the RNA folds and the stability of the domains of RNA structure. The tag structure and mapping procedures depend on the order of the folding in this model. Therefore, these tags are not necessarily unique. However, they help describe the most likely pathway to the native state; something that is not offered by typical mapping methods. RNA is currently thought to fold according to the hierarchical folding hypothesis [25] .
By employing a folding strategy to this problem, the linkage stem indicates something of the most likely order in which the PK structure formed. For typical ABAB PKs (simple cPKs), which stem is defined as the linkage stem is not particularly unique or significant. However, true linkage stems should be restricted to stems that are less than a full rotation (360 o ) of a contiguous A-RNA double helix (about 10 base pairs [26] ) because all PK models exclude true knots. Proteins that have true knots have been observed [27] . Knots are quite possible and indeed should be common -as anyone who has ever untangled a "carefully wound" electrical cord can realize. Therefore, the length of a linkage stem on cPKs should be less than 10 contiguous bps; nevertheless, stems of this length appear to be extremely rare. There should be no other distinction than the most probable order of folding that is read into this information.
The linkage stem of an ePK reflects the initial domain structure that appeared before the linkage stem of the PK joined the independent RNA domains. Therefore, in ePKs, there is more significance behind what forms the basis of the linkage stem. Nevertheless, these definitions are often more qualitative and, thermodynamically, there is nothing unique about them.
There is one final issue with mapping. What happens if we build a PK and later add on another PK and have to edit the original PK slightly? This is a plausible situation. One way is to update the internal object. However, given that the level of editing is not extreme, it is better to keep the original object unchanged because that represents the best structure over the region of the original PK. At present, the extent of editing appears to satisfy this condition. Hence, we have not constructed rules to handle drastic editing of the originally derived structure if it is embedded in a pseudoknot. Note that if the domain being edited is not a pseudoknot, then quite drastic editing is certainly allowed in vsfold5 even if pseudoknots are present within that same domain.
Therefore, instead of editing the original object, vsfold5 uses a lookup table of exit tags to decide if a region of structure should be evaluated. Any reconfiguring that would occur in a biological context would involve melting of material and reconfiguring the surroundings that were originally present in the original PK structure. This means we need to fix the original structure at the new neck region. This we can do by checking a short list of exit tags that indicate where some editing has occurred, these tell the methods to jump to the next task built up at the higher level.
Here we describe the computational demands (time complexity) and memory requirements of vsfold5. In addition, we describe the structural complexity that is accessible to vsfold5.
Before discussing the time complexity, we must emphasize that there are numerous known inefficiencies built into the secondary structure methods of the current program because the focus has been on the science; not the algorithm. We expect more efficient code is likely to speed up the calculations significantly and reveal the true cost of the pseudoknot calculations. A benchmark test of the current program is shown in Table S3 .
A major part of the time complexity in vsfold4 and 5 is devoted to finding a good combination of stems in the stem building methods. A full search should add a cost of [28] .
The stem search further includes recursive methods that scan different pathways to find the best effective stem length with the minimum free energy. Recursive scanning can extend up to 6 levels (default) and more can be requested, but six levels are generally sufficient for most problems. The search is done recursively until either a cutoff is reached or the stem clearly terminates. Because such recursive optimizations are done every time (even though past successful solutions are already known), it is currently a major design inefficiency. An ameliorating factor is that this search is limited to a finite number of recursive hops. Theoretically, reusing these solutions reduces the time complexity to as small as [28] . However, because this program remains under extensive constant development, these optimizations are currently not used. Without any optimization, the time complexity appears to be for this calculation. forward, reverse, free energy and tag Table S1 ).
As with the case of the stem building modules, the MBL modules certainly add a time complexity of [29] . The more complete analysis of the MBL's environment also adds considerable overhead.
Memory requirements also are increased with this approach due to the MBL branch pointers in general, and also the contents of the pseudoknot handles. However, the pointer size is of , and the maximum number of branches is an inverse function of the Kuhn length (a longer Kuhn length requires less allocation of memory for a sequence of length N because more structure is put 2 ( ) O N into building long stems and less is devoted to loops and branching). Therefore, the memory
p is the number of pointers (same as a stem) and
is the maximum number of branches (a number that is inversely dependent on the Kuhn length).
The default value is 15 branches and therefore m 30 m N ≤ (for large N). Future development of an object that permits internal allocation of memory is expected to reduce this global demand for branch memory significantly.
Given that optimizations are done on the stem search methods that reduce the time complexity to the theoretical minimum of , the addition of PK capability will result in a time complexity ranging between and . This is comparable to some other recent methods [19] . A simple search for H-type PKs would normally be expected to cost in time complexity.
With this approach, the full structural complexity that normally requires is not sacrificed;
however, there are limitations introduced due to the choice of the folding pathway.
In the modeling, we assume that if a biologically active functional RNA requires a PK in the structure, the existing folded structure should leave "hints" that encourages the formation of the linkage stem. Though it is possible this assumption is sometimes inaccurate for particular examples,
such counter examples appear to be few based on the current survey. Therefore, all free strand regions are checked in the search; however, only strands that already have at least 5 nts free are tested for potential PKs.
There are several reasons why this approach can permit full complexity without adding more than an order 1 increase in time complexity.
Mapping is able to reduce this to a fractional exponential increase. To show that mapping will reduce the time, we show the following thought experiment. In 
With the two basic structures (cPKs and ePKs), recursive PKs can be built [30] . In Figure S13 , we
show an example of a recursive ePK that works successively along a single pattern. In Figure S13a In Figure S13c , the dot indicates an individual domain (also labeled above as in Fig. S13b ).
These are surrounded by a box that is labeled R n d R k that indicates the successive assignment tags for the ePK domains. The box enclosing the dots indicates the objects inside. Therefore, the label R 1 R contains d 1 and d 2 , the label RR 2 contains the objects R 1 progression.
The arrangement of the boxes need not be in such a trivial order as shown in this example.
However, once a PK is decided from some folding pathway, this wrapping shields the internal contents inside (though this aspect could be modified too). Any recursive pattern of construction of this kind requires unwrapping the box before the contents inside can be explored. Hence, it is not essential that it follows exactly the plan of this example, but, currently, some patterns could be missed if the priority of construction is disordered relative to the sequential folding direction.
This process is done procedurally with recursive construction methods, but resembles that of wrapping the objects inside.
Although Fig. S13 is an example done with ePKs, it is also possible for such a pattern to form with cPKs. This again is reflecting something of a view of how RNA structure is formed. The pattern generated would be identical, but the process by which it came about is not. With the ePK, a pair of blue stems would form first and these would then fuse together. With a cPK, linkage would be added successively to the structure. Generally, in this model, a stand-alone linkage stem requires independent stability of whatever internal structure is inside. On the other hand, an extended PK depends on the stability of its independent domains (for example, d 1 and d 2 ) and their mutual coupling together to form a small linkage stem. Far more complex mixtures of structure are likely to be built up with an ePK.
As a second set of examples, we consider how a pseudoknot with the pattern ABCBDADC ( Fig. S14a ) and the pattern ABCDCDAB (Fig. S14b) would form [24] , where, for readability, we have added a bar over certain letters to indicate the complimentary strand of the corresponding letter:
e.g., and A A . The folding pathway is shown in Fig. S14 . Figure S14a shows a recursive PK formed by adding more stem onto an existing PK. Figure S14b shows a cPK embedded inside another cPK. Hence, many types of complex PKs can be found with this strategy.
With some limitations specified here, vsfold5 can map any structure that can be expressed by some reasonable sequential (5' to 3') folding scenario using these simple cPK and ePK motifs. The concepts behind vsfold5 permit a capacity to find all different types of pseudoknots with minor restrictions that we lay out here. (Fig. S13) , connecting the ends, as in Fig. S15d , is currently not done. Nevertheless, this example can be done, if one really wishes and in this respect, vsfold5
can do better than even the best available approach currently. With this general proviso, all the structures indicated in the historic developments in this field are doable in this approach; given some consistent folding pathway is describable.
The program can solve structures such as those shown in Fig. S15 . Structures (c) and (d) were considered in Ref. [30] and structure (e) is discussed in Ref. [24] . Labels on the Rivas and Eddy
Feynman diagrams [18] in Fig. S15 indicate the stem sequence and its compliment (e.g., A and A ).
The structures in Figs. S15a-c can all be evaluated with vsfold5 in its current form.
Exceptions, as pointed out in item 4, are such structures as Fig. S15d (first pointed out in Ref. [30] ) and S15e (pointed out in Ref. [24] ).
For Figure S15d [30], only the loop around (d 1 and d n ) is not possible in the current vsfold5 architecture. Presently, vsfold5 does not look inside of its own pseudoknots for more pseudoknots. It is assumed that pseudoknots build up modularly inside of one another, if they build up at all in this way, and we need not concern ourselves with modules deep inside the superstructure until we need to unwrap them. Moreover, the types of structures likely to satisfy even this are small because of steric hindrance of jamming two stems in a loop and folding such a structure. This would only be more problematical for joining d 1 and d n (Fig. S13 ) together. Perhaps with sufficient length, a circle could be made that would satisfy all the physical requirements. To handle this prediction problem, we would need to add exit tags for domains in the lookup table and apply them in the same way as the neck-exit-tags. Currently, aside from the aspect of theoretical curiosity, such matters, though in principle doable, have not been opened in the current architecture of the program. For Figure S15e , for the pattern ABCADBECDE [24] , currently vsfold5 can chose either B or C, but not both from the general pathway of folding domain 1 and 2 first. Estimating from the general tendency of the free energy rules, stem C is probably more likely. In short, we don't currently ask PKs to examine themselves. Nevertheless, there is an alternative pathway shown in Fig.   S16 that can succeed with this structure. Hence, the order is a crucial factor in this model. Even this can be remedied with little additional cost in time complexity, were this deemed critical in prediction problems.
Hence, there is in fact no sacrifice in computational possibility at all and, indeed, vsfold5 may have even more capability than any existing approach. However, there are some additional restrictions on what is admissible due to the current state of extreme uncertainties and perhaps some (largely correctable) idiosyncratic assumptions made in the design and current development of the program. Figure S16 . An alternative pathway that leads to the exact structure listed in Fig. S15e. 
Here we explain the general concepts behind the evaluation methods of pseudoknots. Most of the secondary structure methods are done as before and can be found in the literature [1] .
The free energy is path independent in the CLE model. Therefore, the choice of linkage stem has only the indication of the most likely pathway for the structure to fold and carries no other significant information beyond this.
There are a multitude of structural issues associated with pseudoknots that can often be ignored when the problem only involves secondary structure. The reason appears to be due largely to the fact that the space between different secondary structures is sufficiently large that sub-domains are not as likely to interfere with each other. Not so for the pseudoknot. Though RNA bases all exhibit a similar size and chemical identity, packing issues are important particularly due to electrostatic effects. Hence, PKs begin to show some of the same difficulties encountered in protein structure problems where both packing and residue characteristics in some context can make or break the structure prediction [31] once the PK problem is introduced.
Currently, the methods presented here are largely based on qualitative estimates and are subject to considerable revision in the future.
In all cases tried so far, the linkage stems tend to have less than 10 contiguous bps in a single stem; a situation where a knot would form [26, 32] . It is often the case that the important linkage stems only contain 4 to 6 bps (close to the 180 o twist) and, often, when they do exceed 5 bps, they have an internal loop that breaks the continuity at 5 bps. This renders the issue about the twist largely moot. Generally, RNA appears to use internal loops (I-loops) to help compensate for the twist, basically defeating most attempts to use these relations in some general way. A cutoff of 9 contiguous bps on the linkage stem is easily added.
If the loop accepting a linkage is far too small, then there is very little flexibility in the loop to accommodate sufficient twist between the loop and the linkage stem. We refer to this here as local contact strain. This is expressed graphically in Fig. S17a and in 3D in Fig. S17b . Several problems emerge, particularly when considering Fig. S17b . First the free strand (orange) connecting the linkage stem (red) is rather short to accommodate the large rigid structure that is being forced on the space. Worse is that the root stem (blue) is filled up with the linkage stem. Neither can the root domain make up the difference because it is already bending under the strain of a tight loop. Second, the loop regions on both halves are short, so there is no flexible free play between the forming strands. Over 5 bps, the twist in the stem is roughly 180 o , and when this must be coupled with such a short loop, there is no room to accommodate either part well. Finally, nucleic acids have negatively charged phosphates that must be compensated by divalent cations in tight configurations, yet there is hardly any surface area where such divalent cations can rest long enough to have much impact on the stability. Figure S17 . An example of the concept of "local contact strain":
shown diagrammatically in (a) and 3 dimensionally in (b) with the structure on the left representing the condition prior to adding a PK, and on the right, representing the condition after adding a PK. The orange strand indicates the junction region, red the linkage and blue the root domain (purple indicates the region being joined).
Over the range of 5 bps, the double strand helix of A-RNA rotates approximately 180 o . This renders the distortions and lack of free play even more severe in (b) than would be suggested by the diagrammatic example in (a).
When too much of the stem is occupied by the linkage, the part occupied by the stem restricts the free motion of the loop, changing the flexibility and distorting the structure of the loop.
Therefore, the costs of formation should increase when too much of the loop is occupied by the linkage stem. This contact strain tends to select root domains with a larger free strand contact region for PK formation compared to tight loops. When the free strand within the root domain is less than 2 nt, the structure is strongly discouraged unless melting some of the existing stem can achieve a visible improvement. The persistence length, or more precisely when referring to a Gaussian polymer chain, the "Kuhn length" ( ξ ), is also important to consider here because the stiff structure should only increase resistance to tight structures such as this. length is a measure of the stiffness; hence, the Kuhn length will tend to stiffen the strands.) There are known loops that have only 1 nt free, and to this, the above cost will be added. Experimentally, at least some of the PKs that have such a short strand also require Mg 2+ to form. Therefore, this does not seem an unreasonable cost to add to very short loops.
Very short PK structures ( nt), as found with some frame shift related pseudoknots [33, 34] , require special attention to address. In line with the observations of Huang et al. [4] , at least some discrimination can be worked out from the specific features of the PK. We do not analyze to the same detail as Huang et al. However, stem lengths are evaluated similarly with at least one stem requiring equal free strand length or the above cost is applied. Sequence composition and coaxial stacking may also be a factor in the stability of these structures but is currently not considered.
For cPKs, formation costs come from both the contact strain (local in character) and standard stem stability issues that govern all secondary structure stem formation rules. There is no natural distinction between linkage stems and the root domain, so all the basic rules of secondary structure must be applied in the same way to all stems.
For ePKs, coaxial stacking and parallel stem interactions can help stabilize the linkage stem, hence, standard stem stability issues are relaxed slightly for ePKs. A minimum size for an ePK is also applied because two independent domains need sufficient contact region to warrant formation of a linkage between them. When the loop is short, considerable distortion is needed to accommodate the linkage stem. Again, a heavy cost for building a stem on small a loop region is added when min F l p s n l ≥ − occurs in Eqn (S1). Moreover, when 25 R R j i − ≤ nt, the two independent domains are so small that formation of such a structure is essentially impossible to satisfy even were the Kuhn length equal to 3 nt (a ridiculously short length for most structured RNA).
An important feature is pleating and reorientation of the superstructure. For example, the group I intron of Tetrahymena thermophila has a stem that is folded over at the J5/4 junction position of the structure [35, 36] . Hence, this effect should be considered when an internal loop is sufficiently large;
at least for more than 3 nt × 3 nt (3×3).
When pleating occurs, the stem can no longer resemble anything close to a straight stick-like object, but is folded back on itself. If, for example, we have a single pleat (as in the where is the index of a stem corresponding to (when there is only one stem and means there are pleats).
Currently, there is no information available on the FE of pleating and consequently the parallel stem-alignment interactions between the P4 and P5 stems are unknown (though probably attractive). Therefore, the current algorithm does not ascribe any gain or loss from this effect; rather it simply evaluates a plausible effective length for the stem and adds a small entropic cost of for each pleat, where we currently assume the cost is electrostatic effects in the junction. We currently assess stems with internal loops greater than 3×3 as "plausible". Only the plausible effective length is considered and if even this cannot be satisfied, then surely the PK structure cannot form. An example of pleating is shown diagrammatically in the main text (Fig. 4d) . B 1.5k T
In addition to contact strain, both cPKs and ePKs must be able to combine in an energetically favorable way with each other. In developing the concepts here, we have adapted the concept of flexible loops and rigid rods first attempted successfully in Isambert et al. (Refs. [9] and [26] ). The importance of considering the structure of the PK in a more 3D perspective is worth emphasizing, and in this respect, the elaborate architectures worked out in the approach of Ref. [9] are an important direction to take in considering PKs. The advantage of this approach is that the method of rejection is based on a slightly more objective approach of thermodynamics rather than a somewhat subjective approach of predefined elimination of certain structure types. 
We begin with a simple example and gradually develop the concept from this kernel. Figure S18a shows a schematic of a simple H-type cPK. Because the schematic is not shown in 3D, it suggests that J s must stretch out a length p l to be able to form the linkage stem at J l . In fact, there is a helical twist (Section S2.4.1) that can ameliorate this and there are differences between the minor grove and the major grove (Section S2.4.2 and Ref. [4] ). Ideally, these factors should be considered.
However, beyond these trivial examples, a general way to envision a 3D structure of arbitrary complexity becomes rather unwieldy without any experimental information to support it. Currently, because of this paucity of experimental information, vsfold5 handles the problem in the rather simple-minded way diagrammed out in Fig. S18a for all cPK structures. This ensures that there is no overt bias introduced by the foreknowledge of a precise structure for small cPKs and utter ignorance for large cPKs.
As a result, the stretching of J s by an amount p l (Fig. S18a) is assumed in these calculations, where p l is the effective length of the root domain (Section S2.4.3). Similarly, J s is also evaluated in terms of its effective length such that secondary structure, which shortens the actual stem length in the junction region, is taken properly into account. We considered including corrections for the twist [26, 32] but found it was unnecessary at this level of maturity -though obviously important in principle to keep in mind. Though we sacrifice some accuracy, the structures are treated uniformly this way. When more experimental data is available, a far more precise module can be constructed.
Using the general form of the CLE model, we estimate the initial length of the coil in the free strand i r J s region (Fig. S18a) 
where J s describes the number of nt in the junction sequence, is the distance between the nucleotide residues in the chain (units of length) and The thermodynamics is blind to the definitions of linkage and root stems because the folding is path independent. To insure that there is no bias in evaluating the free energy, Eqn (S5) is computed by exchanging labels ( p l with J l and J s with p s ) in Fig. S18a and doing the analysis in the same way. The resulting free energy values are then added. This way, whichever way the structure folded, the final result is independent. It also reflects the property of equal and opposite reaction and response.
We herein emphasize that this approach is quite preliminary and is likely to be revised substantially in the future when more precise 3D information can be worked directly into the code.
The concept is similar to Ref. [26] . The difference is that the full equation for the entropy change is used rather than just the stretching part (the right hand side of Eqn (S5)) and this equation 
For the ePK, we can apply a similar approach (in Fig. S18b ). However, unlike the cPK where Currently, the weight for ς in Eqn (S4) is set to 0 for cPKs and 0.5 for ePKs. The reason for the difference is that the free strand on the cPK has more ways to accommodate the length differences by flexible rearrangements than the equivalent problem with the ePKs, particularly when large domains are involved. In both cases, strong deviations are strongly discouraged when the stems are drastically different in length and cannot be compensated reasonably using pleating.
So far, we have only considered the case where the relationship between the effective stem length of the root domain and the adjoining linkage stem could be placed in direct relation to each other.
However, the relative positioning of the linkage stem on the root domain (or domains) is also (i p1 ,j p1 ) 
Extended PKs require additional considerations because the structure involves two domains of effective stems. In Figure S20 , the relation between the two stem-loops is such that their lengths ( and ) are equal and their relative phase ( 1 l 2 l α ) is zero. The first example (Fig. S20a) is the standard for that this structure is typically drawn in: 1 0 θ = and 2 θ π = rads. The second example (Fig.   S20b ) has the angles in the loops rotated by an angle π rad: 1 θ π = and 2 0 θ = rads. There is more symmetry and therefore more degeneracy in the structural orientations of the domains in an ePK. Figure S21 shows what happens when we move away from this very simple example. What appears to matter more is the difference in the orientation of the angles or the phase of the angle. When secondary structure or other pseudoknot units are added to these simple schematics shown in Fig. S18 , the length of the free strand available for cutting slack in the length is reduced.
Currently, the algorithm's heuristics assume that there is no change in these subdomains after formation. Therefore, these structures are assumed frozen in form when the length of free strand is evaluated. However, even were we to open up some of the sub-domains located in the junction and root domain regions, the algorithm can evaluate the resulting structure according to a systematic rule that is completely reversible.
In general, examination of the detailed processes going on within sequential folding and the search information we examined, there is little to be gained by ripping up already formed structure to hook on an emaciated linkage stem. It is more likely that evolution has already committed a lot of the effort needed to prepare a sequence for the best folding pathway. There is the possibility that between the "before" and the "after" should be significant. Finally, if a linkage stem is really supposed to extend a domain, evolution is likely to select for configurations that make that linkage stem interface easy to find.
Hence, random sequences and folding in non-biological contexts where the vector direction of the sequential folding is ignored may result in very different predictions than the current algorithm's heuristics handle, but evolution (with 3.5 billion years behind it) has surely selected sequences that avoid many of these major pitfalls.
A final important category involves the arrangement of stems within the super structure: coaxial stacking, parallel stem alignments, and neighboring linkage stems (Figs. S22 and S23).
S2.4.6.1. Coaxial stacking:
An example of coaxial stacking is shown in Fig. S22a . Currently, vsfold5 cannot compute any gains from coaxial stacking, only a small reduction in entropy loss for some simple cases. Moreover, the coaxial stacking is only computed when it is a proximal stem within the secondary structure or proximal to a linkage stem. Future plans are to add modules using the global mapping strategy to evaluate complex architectures of coaxial stacking.
S2.4.6.2. Parallel alignment of stems:
An example of parallel alignment of stems is shown in Fig. S22b . The RNA tends to have some level of mutual attraction. Hence, there should be considerable stabilization when stems can be arranged in parallel [37] . In addition to coaxial stacking, pseudoknots appear to require far more consideration of parallel stem alignment. Pleating is another example of simple parallel stem alignment where stabilization is likely to result from the mutual self attraction of the RNA. Currently, there is scant information on these type of interactions. As a result, these contributions are currently ignored.
However, future plans are to develop modules to address stem arrangements.
coaxial stacking parallel alignment a b
Supplement Figure S22 . Examples of coaxial stacking and parallel alignment between two stems. Coaxial means that both stems are along the same axis.
Parallel alignment means that the stems are positioned in parallel.
The last group of interactions that are currently considered is the situation of tandem linkage stems (Fig. S23) . In a pseudoknot calculation, it can often happen that some large domain has a linkage stem that can, in principle, associate with another domain where a linkage stem neighbors it.
However, RNA has physical dimensions (Fig. S23c) . Currently, we exclude these linkages if they result from independent domains if the existing linkage ( Fig. S23c: PK1 ) and the new linkage ( Fig.   S23c : PK2) in the developing ePK border at a distance less than 4 nt away. There is the possibility that there could be coaxial stacking between such domains, but currently, there is no evidence, and such matters require more data to make a definitive decision about how to model the effect properly.
Other types of tandem linkages such as those shown in Figs. S23a and b are allowed.
In the case of Fig. S23a , the linkages are actually located on independent domains and may even have some coaxial stacking occurring between them. Examples of this situation are found with the tobacco mosaic virus where there are three tandem PKs (see Fig. 1e of the main text). In such a case, there is no true distinction between a linkage stem and the root domain. Hence, it would not be correct to exclude such structures.
In the case of Fig. S23b , the linkages are on the same root domain and are immediately tandem to one another. Again, there is no true physical distinction, as the linkage stems and the root stem can be easily exchanged.
We expect that it is necessary to develop more sophisticated considerations, but currently, these general categories appear to be sufficient to discriminate between valid structures and invalid ones (at least for the structures so far tested). It would be desirable to develop some coaxial stacking models for special cases such as that shown in Fig. S23a . More experimental data is needed to understand these structures well before the model can be improved significantly. 
In the search for PKs, the heuristics first looks for contacts that are significant in magnitude to warrant further testing. If a potential contact is found where 2 kcal/mol dG < − , a stem melting module will try to melt part of the structure in the root domain to see if better contact can be achieved. Occasionally, this delivers a true edit. However, because the free energy of stems are of similar order of magnitude, most of the time, it appears that no gain is achieved.
At the same time these local stem-melting methods are testing the minor rearrangements around the neck of the root domain and the linkage stem, the heuristics also continually build up a structure starting at the 5' end and moving progressively toward the 3' end searching for the best structure.
While the main structure is building up, a "leading edge" of sequence ranging from 7 nt to 20 nt ahead of the currently built up structure (also called the dwell region) is tested on this existing structure for possible pseudoknots. This we refer to as a "hot lead" because the process resembles melting the leading edge strand onto the existing structure. When the folding catches up with this already tested structure, the free energy built by the secondary structure construction methods at the same region is then compared with the free energy generated by the pseudoknot test. If the pseudoknot turns out to be more stable than the structure generated by the secondary structure construction methods, then the PK is selected. This latter effect is generally far more drastic and appears to be the most effective.
A 3D structure will also be affected by entanglement issues [8, 9] . However, vsfold5 only considers the thermodynamically most-probably folding pathway in the calculation. Entangled structures represent alternative and less favorable structures. Hence, the entanglement issues are completely circumvented. Therefore, although a genuine issue, we need not monitor these or assign any cost function for them; nor should we, unless we intentionally wish to build them. Moreover, whatever cost could be derived would have to take into account base triples and probably other tertiary structure interactions. Since there is virtually no context dependent thermodynamic data for base triples, it is difficult to make more than a qualitative estimate of the stability of such structures at the present time.
Thermodynamics and statistical mechanics are important in every physical process studied in science and engineering. Yet thermodynamics remains one of the poorest approaches to structure prediction of RNA and proteins; particularly when sequences become very long. Here, we explain some points where we observe that the predictions appear to improve within the current model. Whether these improvements are sufficient to overcome these broader issues remains to be seen.
First, as structures grow larger, the 3D features of the structure and their interactions with other parts of the structure become very important. Stems can form coaxial stacking. Stems can also condense into complex parallel interaction arrangements. These are common features of the RNase P (Ref. [38] ) and the group I intron (Ref. [35] ) that were tested in this work. The folding of these structures into modules of tightly packed, interacting structures requires context dependent experimental parameters that are currently rare or non-existent.
The current 3D evaluation methods in vsfold5 are of the most trivial and simple-minded of models. These models appear to be sufficient for simple pseudoknots; however, they lack enough generality to handle the far more complex structural interactions that can develop in large compactly folded RNA sequences: particularly molecules like RNase P [38] . Certainly, we should expect that the mapping information of vsfold5 can be exploited to consider these compact 3D structural interactions; particularly if this is combined with experimental data that directly measures the thermodynamics of these interactions. Presently, even for the few 3D structural motifs that vsfold5 detects in a calculation, these contributions are ignored because we don't know what objective parameters to assign to them.
Notably, the authors in Refs. [7] and [9] have also tried to look at 3D structural issues in their models; some of it quite detailed. Considerable experimental information is needed to significantly improve and test our model as well as these other models.
Second, though it was computationally expedient to use a single Kuhn length for vsfold5, the flexibility of a real RNA structure (an inverse function of the Kuhn length) is likely to vary; particularly in most long functional RNA sequences. Furthermore, the flexibility can be context dependent and different stages of the life cycle of an active RNA can lead to changes in structure.
For example, this is known to occur in the life cycle of HIV-1 [39] . Likewise, nascent RNA is surely different from well annealed RNA [40] . More experimental data is needed to understand the environmental conditions that influence the Kuhn length. No clear information is currently available.
Predictions would certainly be helped if the Kuhn length was adjustable to appropriate context dependent values. Even a simple adjustment at the level of a domain would help (see Refs. [41] [42] [43] for these definitions). For example, we found that we could obtain the correct structure between P9 and P9.2 in Fig. 2c (main text) by simply cutting the sequence at P6 and using a smaller Kuhn length to fit the sequence from P6 to P9.2 (Ref. [1] ). Therefore, varying the Kuhn length is an approach that shows measurable promise. This would certainly help biologists if all that is required is to cut up the domains and look at the closer details.
We are currently developing an automated method for selecting the Kuhn length (ξ ). However, more information is needed about the relationship between the experimental conditions and the Kuhn length. Further study of real RNA should be expected to require some critical thinking on the part of the user.
Third, proteins are often involved with larger structures. There is not a lot we can do about that until we have a model to understand protein-RNA interactions. Vsfold4 and 5 have aimed at understanding what the RNA does in the absence of these proteins. Therefore, prediction failure with Vsfold4 and 5 may indeed be informative because it can help us understand the contribution from protein interactions.
Finally, we cannot emphasize enough the importance of including partition function information and suboptimal structure into these calculations. In this work, we have shown that directional folding (5' to 3') may be significant in RNA folding problems. Refolding experiments reflect different experimental conditions to the natural course of folding. Nevertheless, trapped
intermediates are observed (and should be expected) regardless of the direction of folding. They are, at best, only amplified in refolding experiments. A partition function calculation tells us the distribution of states. We have shown that the distribution of similar structures is sorted far better using the same strategy used by vsfold4 and 5 (see Refs. [41, 42] ). That study included rRNA (1534 nt). From these studies, we saw not only that we could obtain a better selection of the right structure from the solution set; we saw that all similar structures tended to group together with that structure.
This also means that other dominant suboptimal structures can also be detected because they tend to appear in groups. This is what we should expect of a distribution of structures in a partition function and what we indeed observed. No other approach has ever demonstrated this capability. Therefore, to study the states of a riboswitch, this approach offers some advantage in suboptimal structure detection.
The major advantage that vsfold5 offers is that the calculation is stable. By this we mean that when the domain size exceeds a certain limit (a function of the Kuhn length), there is no further change in the predicted structure [41, 42] . This does not mean that vsfold5 picks the correct structures in that domain; rather, beyond a certain length, it does not corrupt whatever structure was predicted. In general, this means that a user who selects a poor (5' to 3') sequence fragment to study and a poor Kuhn length can still obtain some useful information from vsfold5; though the utility of the calculation is often greatly diminished. This stability is a feature that no other approach can claim. Therefore, we have managed to address part of the major issue raised in Ref. [22] . Because we have achieved stability, we can now begin to address the other major problems.